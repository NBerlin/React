{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","deleteOnClick","text","SubmitForm","state","value","handleChangeFront","bind","handleChangeBack","handleSubmit","event","valueCopy","this","target","setState","callBack","preventDefault","onSubmit","type","onChange","callBackClear","React","Component","Board","clearAll","squaresFrontside","squaresBackside","squaresFacingFront","ls","set","squaresFrontsideCopy","squaresBacksideCopy","squaresFacingFrontCopy","push","get","i","splice","console","log","items","entries","index","renderSquare","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e313b269.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport ls from 'local-storage';\r\n\r\n\r\nfunction Square(props) {\r\n    return (\r\n      <button\r\n      className = {props.className + \" square\"} \r\n      onClick = { props.onClick }> \r\n      <div className=\"deleteButton\" onClick={ props.deleteOnClick }>\r\n        X\r\n      </div>\r\n        {props.text}\r\n       \r\n        </button> \r\n    );\r\n}\r\n\r\nclass SubmitForm extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      value:[\"\",\"\"],\r\n    };\r\n    \r\n    this.handleChangeFront = this.handleChangeFront.bind(this);\r\n    this.handleChangeBack = this.handleChangeBack.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChangeFront(event){\r\n    const valueCopy = this.state.value;\r\n    valueCopy[0] = event.target.value;\r\n    this.setState({\r\n      value: valueCopy\r\n    })\r\n  }\r\n\r\n  handleChangeBack(event){\r\n    const valueCopy = this.state.value;\r\n    valueCopy[1] = event.target.value;\r\n    this.setState({\r\n      value: valueCopy\r\n    })\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    this.props.callBack(this.state.value);\r\n    event.preventDefault();\r\n    this.setState({\r\n      value:[\"\",\"\"]\r\n    });\r\n    \r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"submitForm\">\r\n        <form  onSubmit={this.handleSubmit}>\r\n          <input className=\"submitFormPart\" type=\"text\" value={this.state.value[0]} onChange={this.handleChangeFront} />\r\n          <br />\r\n          <input className=\"submitFormPart\" type=\"text\" value={this.state.value[1]} onChange={this.handleChangeBack} />\r\n          <br />\r\n          <input className=\"submitFormPartbutton\" type=\"submit\" value=\"Submit\" />\r\n          </form>\r\n          \r\n          <button className=\"submitFormPartbutton\" onClick={this.props.callBackClear}> Clear all notes</button>\r\n        </div>\r\n      \r\n    );\r\n  }\r\n\r\n}\r\n\r\nclass Board extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      squaresFrontside: ls.get('squareFrontside') || [],\r\n      squaresBackside: ls.get('squaresBackside') || [],\r\n      squaresFacingFront: ls.get('squaresFacingFront') || []\r\n    }\r\n  }\r\n\r\n  onClick(i){\r\n    const squaresFacingFrontCopy = this.state.squaresFacingFront;\r\n    squaresFacingFrontCopy[i] = !squaresFacingFrontCopy[i];\r\n    this.setState({\r\n      squaresFacingFront: squaresFacingFrontCopy,\r\n    });\r\n    ls.set(\"squaresFacingFront\", squaresFacingFrontCopy );\r\n  }\r\n\r\n  deleteOnClick(i){\r\n\r\n    const squaresFrontsideCopy = this.state.squaresFrontside;\r\n    const squaresBacksideCopy = this.state.squaresBackside;\r\n    const squaresFacingFrontCopy = this.state.squaresFacingFront;\r\n\r\n    squaresFrontsideCopy.splice(i,1);\r\n    squaresBacksideCopy.splice(i,1);\r\n    squaresFacingFrontCopy.splice(i,1);\r\n    if(squaresFacingFrontCopy[i]){\r\n      squaresFacingFrontCopy[i]=!squaresFacingFrontCopy[i];\r\n    }\r\n    this.setState({\r\n      squaresFacingFront: squaresFacingFrontCopy,\r\n      squaresBackside: squaresBacksideCopy,\r\n      squaresFrontside: squaresFrontsideCopy\r\n    });\r\n    ls.set('squaresFacingFront', squaresFacingFrontCopy);\r\n    ls.set('squaresBackside', squaresBacksideCopy);\r\n    ls.set('squareFrontside', squaresFrontsideCopy);\r\n    console.log(squaresFrontsideCopy,squaresBacksideCopy,squaresFacingFrontCopy)\r\n  }\r\n\r\n  clearAll = () =>{\r\n    this.setState({\r\n      squaresFrontside: [],\r\n      squaresBackside: [],\r\n      squaresFacingFront: []\r\n    })\r\n\r\n    ls.set('squaresFacingFront', []);\r\n    ls.set('squaresBackside', []);\r\n    ls.set('squareFrontside', []);\r\n  }\r\n\r\n  renderSquare(i) {\r\n    return (\r\n    <Square \r\n        className={this.state.squaresFacingFront[i] ? 'squareFront' : 'squareBack'}\r\n        text={this.state.squaresFacingFront[i] ? this.state.squaresFrontside[i] : this.state.squaresBackside[i]}\r\n        onClick={() => this.onClick(i)}\r\n        deleteOnClick={() => this.deleteOnClick(i)}\r\n    />\r\n    );\r\n  }  \r\n\r\n  callBack = value => {\r\n    const squaresFrontsideCopy = this.state.squaresFrontside;\r\n    const squaresBacksideCopy = this.state.squaresBackside;\r\n    const squaresFacingFrontCopy = this.state.squaresFacingFront;\r\n\r\n    squaresFrontsideCopy.push(value[0]);\r\n    squaresBacksideCopy.push(value[1]);\r\n    squaresFacingFrontCopy.push(true);\r\n\r\n    this.setState({\r\n      squaresFrontside: squaresFrontsideCopy,\r\n      squaresBackside: squaresBacksideCopy,\r\n      squaresFacingFront: squaresFacingFrontCopy\r\n    })\r\n\r\n    ls.set('squaresFacingFront', squaresFacingFrontCopy);\r\n    ls.set('squaresBackside', squaresBacksideCopy);\r\n    ls.set('squareFrontside', squaresFrontsideCopy);\r\n  };\r\n\r\n\r\n  render() {\r\n  const items = []\r\n\r\n  for (const[index] of this.state.squaresFrontside.entries()){\r\n    items.push(this.renderSquare(index))\r\n  }\r\n    return (\r\n  <div>\r\n    <div className=\"flexBox\">\r\n    {items}\r\n    </div>\r\n    <div>\r\n    <SubmitForm callBackClear={this.clearAll} callBack={this.callBack}/>\r\n    </div>\r\n  </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Board />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}