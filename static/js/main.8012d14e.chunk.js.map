{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","text","SubmitForm","state","value","handleChangeFront","bind","handleChangeBack","handleSubmit","event","valueCopy","this","target","setState","callBack","preventDefault","onSubmit","type","onChange","callBackClear","React","Component","Board","clearAll","squaresFrontside","squaresBackside","squaresFacingFront","ls","set","squaresFrontsideCopy","squaresBacksideCopy","squaresFacingFrontCopy","push","get","i","items","entries","index","renderSquare","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8012d14e.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ls from 'local-storage';\n\n\nfunction Square(props) {\n    return (\n      <button \n      className = {props.className + \" square\"} \n      onClick = { props.onClick }> \n        {props.text}\n      </button>\n    );\n}\n\nclass SubmitForm extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      value:[\"\",\"\"],\n    };\n    \n    this.handleChangeFront = this.handleChangeFront.bind(this);\n    this.handleChangeBack = this.handleChangeBack.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChangeFront(event){\n    const valueCopy = this.state.value;\n    valueCopy[0] = event.target.value;\n    this.setState({\n      value: valueCopy\n    })\n  }\n\n  handleChangeBack(event){\n    const valueCopy = this.state.value;\n    valueCopy[1] = event.target.value;\n    this.setState({\n      value: valueCopy\n    })\n  }\n\n  handleSubmit(event) {\n    this.props.callBack(this.state.value);\n    event.preventDefault();\n    this.setState({\n      value:[\"\",\"\"]\n    });\n    \n  }\n\n  render(){\n    return (\n      <div className=\"submitForm\">\n        <form  onSubmit={this.handleSubmit}>\n          <input className=\"submitFormPart\" type=\"text\" value={this.state.value[0]} onChange={this.handleChangeFront} />\n          <br />\n          <input className=\"submitFormPart\" type=\"text\" value={this.state.value[1]} onChange={this.handleChangeBack} />\n          <br />\n          <input className=\"submitFormPartbutton\" type=\"submit\" value=\"Submit\" />\n          </form>\n          \n          <button className=\"submitFormPartbutton\" onClick={this.props.callBackClear}> Clear all notes</button>\n        </div>\n      \n    );\n  }\n\n}\n\nclass Board extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      squaresFrontside: ls.get('squareFrontside') || [],\n      squaresBackside: ls.get('squaresBackside') || [],\n      squaresFacingFront: ls.get('squaresFacingFront') || []\n    }\n  }\n\n  onClick(i){\n    const squaresFacingFrontCopy = this.state.squaresFacingFront;\n    squaresFacingFrontCopy[i] = !squaresFacingFrontCopy[i];\n    this.setState({\n      squaresFacingFront: squaresFacingFrontCopy,\n    });\n    ls.set(\"squaresFacingFront\", squaresFacingFrontCopy );\n  }\n  clearAll = () =>{\n    this.setState({\n      squaresFrontside: [],\n      squaresBackside: [],\n      squaresFacingFront: []\n    })\n\n    ls.set('squaresFacingFront', []);\n    ls.set('squaresBackside', []);\n    ls.set('squareFrontside', []);\n  }\n\n  renderSquare(i) {\n    return (\n    <Square \n        className={this.state.squaresFacingFront[i] ? 'squareFront' : 'squareBack'}\n        text={this.state.squaresFacingFront[i] ? this.state.squaresFrontside[i] : this.state.squaresBackside[i]}\n        onClick={() => this.onClick(i)}\n    />\n    );\n  }  \n\n  callBack = value => {\n    const squaresFrontsideCopy = this.state.squaresFrontside;\n    const squaresBacksideCopy = this.state.squaresBackside;\n    const squaresFacingFrontCopy = this.state.squaresFacingFront;\n\n    squaresFrontsideCopy.push(value[0]);\n    squaresBacksideCopy.push(value[1]);\n    squaresFacingFrontCopy.push(true);\n\n    this.setState({\n      squaresFrontside: squaresFrontsideCopy,\n      squaresBackside: squaresBacksideCopy,\n      squaresFacingFront: squaresFacingFrontCopy\n    })\n\n    ls.set('squaresFacingFront', squaresFacingFrontCopy);\n    ls.set('squaresBackside', squaresBacksideCopy);\n    ls.set('squareFrontside', squaresFrontsideCopy);\n  };\n\n\n  render() {\n  const items = []\n\n  for (const[index] of this.state.squaresFrontside.entries()){\n    items.push(this.renderSquare(index))\n  }\n    return (\n  <div>\n    <div className=\"flexBox\">\n    {items}\n    </div>\n    <div>\n    <SubmitForm callBackClear={this.clearAll} callBack={this.callBack}/>\n    </div>\n  </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Board />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}